{"version":3,"file":"static/js/886.09ccdbd4.chunk.js","mappings":"4MAGaA,EAAY,kCAGZC,EAAO,CAClBC,IADkB,SACdC,EAAaC,GAEf,OAAOC,EAAAA,EAAAA,GAAM,CACXC,OAAQ,MACRH,IAAI,GAAD,OAPe,gCAOf,OAAgBA,EAAhB,oBATc,oCASd,OAAyCC,GAAQ,KAEvD,E,+LCXUG,EAAS,mCAAG,+GAEQN,EAAAA,GAAAA,IAAS,uBAFjB,uBAERO,EAFQ,EAEdC,KAFc,kBAGdD,GAHc,sCAKf,IAAIE,MAAJ,MALe,yDAAH,qDASTC,EAAQ,mCAAG,WAAOC,GAAP,kGAESX,EAAAA,GAAAA,IAAA,iBAAmBW,IAF5B,uBAEPC,EAFO,EAEbJ,KAFa,kBAGbI,GAHa,sCAKd,IAAIH,MAAJ,MALc,yDAAH,sDASRI,EAAY,mCAAG,WAAOC,GAAP,kGAEmBd,EAAAA,GAAAA,IAAA,qEAAwEc,IAF3F,uBAEAP,EAFA,EAEjBC,KAAQO,QAFS,kBAGjBR,GAHiB,sCAKlB,IAAIE,MAAJ,MALkB,yDAAH,sDASZO,EAAe,mCAAG,WAAOC,GAAP,kGAEGjB,EAAAA,GAAAA,IAAA,UAAYiB,IAFf,uBAEdC,EAFc,EAEpBV,KAFoB,kBAGpBU,GAHoB,sCAKrB,IAAIT,MAAJ,MALqB,yDAAH,sDASfU,EAAc,mCAAG,WAAOC,GAAP,kGAEIpB,EAAAA,GAAAA,IAAA,UAAYoB,IAFhB,uBAEbC,EAFa,EAEnBb,KAFmB,kBAGnBa,GAHmB,sCAKpB,IAAIZ,MAAJ,MALoB,yDAAH,qD,wJCE3B,EA/BiC,WAC/B,IAAQa,GAAaC,EAAAA,EAAAA,IAAgB,IAA7BD,SACR,GAAwBE,EAAAA,EAAAA,UAAqB,IAA7C,eAAOC,EAAP,KAAaC,EAAb,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,uGACKZ,EAAAA,EAAAA,IAAgBM,EAASO,QAAQ,OAAQ,YAD9C,gBACXJ,EADW,EACXA,KACRC,EAAQD,GAFW,2CAAH,qDAKlBG,IAAeE,SAEhB,GAAE,KAGD,gBAAKC,UAAU,aAAf,UACE,eAAIA,UAAU,YAAd,SAEIN,EAAKO,KAAI,SAACC,GAAD,OACP,gBAAIF,UAAU,YAAd,WACE,gBAAKG,IAAG,UAAKD,EAAKE,cAAgBpC,EAAAA,IAA1B,OAAsCkC,EAAKE,cAAgBC,IAAI,WAAWL,UAAU,gBAC5F,iBAAMA,UAAU,YAAhB,SAA6BE,EAAKI,QAClC,kBAAMN,UAAU,iBAAhB,wBAA6CE,EAAKK,eAHrBL,EAAKM,QAD7B,OAWlB,C","sources":["api/common.ts","api/movie-api.ts","pages/MovieDetailsPage/MovieCast/index.tsx"],"sourcesContent":["import axios from \"axios\";\n\nexport const API_KEY = '17c5a5de30466e42172be6812ea6018f';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\nexport const BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const HTTP = {\n  get(url: string, q?: string) {\n\n    return axios({\n      method: 'get',\n      url: `${BASE_URL}${url}?api_key=${API_KEY}${q ? q : ''}`,\n    });\n  }\n}\n","import { HTTP } from \"./common\";\n\nexport const getTrends = async (): Promise<any> => {\n  try {\n    const {data: movies} = await HTTP.get('/trending/movie/day');\n    return movies;\n  } catch (e) {\n    throw new Error(e);\n  }\n}\n\nexport const getMovie = async (movie_id: string): Promise<any> => {\n  try {\n    const {data: movie} =  await HTTP.get(`/movie/${movie_id}`);\n    return movie;\n  } catch (e) {\n    throw new Error(e);\n  }\n}\n\nexport const searchMovies = async (query: string): Promise<Array<object>> => {\n  try {\n    const {data: { results: movies }} =  await HTTP.get(`/search/movie`, `&language=en-US&page=1&include_adult=false&${query}`);\n    return movies;\n  }catch (e) {\n    throw new Error(e);\n  }\n}\n\nexport const getMovieCredits = async (movie_credit_path: string): Promise<any> => {\n  try {\n    const {data: credit} =  await HTTP.get(`${movie_credit_path}`);\n    return credit;\n  }catch (e) {\n    throw new Error(e);\n  }\n}\n\nexport const getMovieReview = async (movie_review_path: string): Promise<any> => {\n  try {\n    const {data: review} =  await HTTP.get(`${movie_review_path}`);\n    return review;\n  }catch (e) {\n    throw new Error(e);\n  }\n}\n","import React, { useEffect, useState } from 'react';\n\nimport { useResolvedPath } from 'react-router-dom'\n\nimport { getMovieCredits } from '../../../api/movie-api';\nimport {IMAGE_URL} from '../../../api/common';\n\nimport './style.scss';\n\nconst MovieCast: React.FC<any> = () => {\n  const { pathname } = useResolvedPath('');\n  const [cast, setCast] = useState<Array<any>>([])\n\n  useEffect(() => {\n    const getMovieCast = async () => {\n      const { cast }  = await getMovieCredits(pathname.replace('cast', 'credits'));\n      setCast(cast);\n    }\n\n    getMovieCast().finally();\n    // eslint-disable-next-line\n  }, [])\n\n  return (\n    <div className=\"movie-cast\">\n      <ul className=\"cast-list\">\n        {\n          cast.map((item) => (\n            <li className=\"cast-item\" key={item.cast_id}>\n              <img src={`${item.profile_path && IMAGE_URL}${item.profile_path}`} alt=\"cast-img\" className=\"cast-image\" />\n              <span className=\"cast-name\">{item.name}</span>\n              <span className=\"cast-character\">Character: {item.character}</span>\n            </li>\n          ))\n        }\n      </ul>\n    </div>\n  )\n}\n\nexport default MovieCast;\n"],"names":["IMAGE_URL","HTTP","get","url","q","axios","method","getTrends","movies","data","Error","getMovie","movie_id","movie","searchMovies","query","results","getMovieCredits","movie_credit_path","credit","getMovieReview","movie_review_path","review","pathname","useResolvedPath","useState","cast","setCast","useEffect","getMovieCast","replace","finally","className","map","item","src","profile_path","alt","name","character","cast_id"],"sourceRoot":""}