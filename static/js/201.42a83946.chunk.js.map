{"version":3,"file":"static/js/201.42a83946.chunk.js","mappings":"4MAGaA,EAAY,kCAGZC,EAAO,CAClBC,IADkB,SACdC,EAAaC,GAEf,OAAOC,EAAAA,EAAAA,GAAM,CACXC,OAAQ,MACRH,IAAI,GAAD,OAPe,gCAOf,OAAgBA,EAAhB,oBATc,oCASd,OAAyCC,GAAQ,KAEvD,E,+LCXUG,EAAS,mCAAG,+GAEQN,EAAAA,GAAAA,IAAS,uBAFjB,uBAERO,EAFQ,EAEdC,KAFc,kBAGdD,GAHc,sCAKf,IAAIE,MAAJ,MALe,yDAAH,qDASTC,EAAQ,mCAAG,WAAOC,GAAP,kGAESX,EAAAA,GAAAA,IAAA,iBAAmBW,IAF5B,uBAEPC,EAFO,EAEbJ,KAFa,kBAGbI,GAHa,sCAKd,IAAIH,MAAJ,MALc,yDAAH,sDASRI,EAAY,mCAAG,WAAOC,GAAP,kGAEmBd,EAAAA,GAAAA,IAAA,qEAAwEc,IAF3F,uBAEAP,EAFA,EAEjBC,KAAQO,QAFS,kBAGjBR,GAHiB,sCAKlB,IAAIE,MAAJ,MALkB,yDAAH,sDASZO,EAAe,mCAAG,WAAOC,GAAP,kGAEGjB,EAAAA,GAAAA,IAAA,UAAYiB,IAFf,uBAEdC,EAFc,EAEpBV,KAFoB,kBAGpBU,GAHoB,sCAKrB,IAAIT,MAAJ,MALqB,yDAAH,sDASfU,EAAc,mCAAG,WAAOC,GAAP,kGAEIpB,EAAAA,GAAAA,IAAA,UAAYoB,IAFhB,uBAEbC,EAFa,EAEnBb,KAFmB,kBAGnBa,GAHmB,sCAKpB,IAAIZ,MAAJ,MALoB,yDAAH,qD,+ICK3B,EApCoB,WAClB,IAAQa,GAAaC,EAAAA,EAAAA,IAAgB,IAA7BD,SACR,GAA8BE,EAAAA,EAAAA,UAAqB,IAAnD,eAAOC,EAAP,KAAgBC,EAAhB,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,uGACiBT,EAAAA,EAAAA,IAAeG,GADhC,gBACAG,EADA,EACTV,QACPW,EAAWD,GAFK,2CAAH,qDAKfG,IAAYC,SAEb,GAAE,KAGD,gBAAKC,UAAU,eAAf,SAEIL,EAAQM,OAAS,GACf,eAAID,UAAU,eAAd,SAEIL,EAAQO,KAAI,SAACC,GAAD,OACV,gBAAIH,UAAU,oBAAd,WACE,cAAGA,UAAU,aAAb,SAA2BG,EAAKC,UAChC,iBAAMJ,UAAU,eAAhB,SAAgCG,EAAKE,YAFAF,EAAKG,GADlC,OAShB,6CAKT,C","sources":["api/common.ts","api/movie-api.ts","pages/MovieDetailsPage/MovieReview/index.tsx"],"sourcesContent":["import axios from \"axios\";\n\nexport const API_KEY = '17c5a5de30466e42172be6812ea6018f';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\nexport const BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const HTTP = {\n  get(url: string, q?: string) {\n\n    return axios({\n      method: 'get',\n      url: `${BASE_URL}${url}?api_key=${API_KEY}${q ? q : ''}`,\n    });\n  }\n}\n","import { HTTP } from \"./common\";\n\nexport const getTrends = async (): Promise<any> => {\n  try {\n    const {data: movies} = await HTTP.get('/trending/movie/day');\n    return movies;\n  } catch (e) {\n    throw new Error(e);\n  }\n}\n\nexport const getMovie = async (movie_id: string): Promise<any> => {\n  try {\n    const {data: movie} =  await HTTP.get(`/movie/${movie_id}`);\n    return movie;\n  } catch (e) {\n    throw new Error(e);\n  }\n}\n\nexport const searchMovies = async (query: string): Promise<Array<object>> => {\n  try {\n    const {data: { results: movies }} =  await HTTP.get(`/search/movie`, `&language=en-US&page=1&include_adult=false&${query}`);\n    return movies;\n  }catch (e) {\n    throw new Error(e);\n  }\n}\n\nexport const getMovieCredits = async (movie_credit_path: string): Promise<any> => {\n  try {\n    const {data: credit} =  await HTTP.get(`${movie_credit_path}`);\n    return credit;\n  }catch (e) {\n    throw new Error(e);\n  }\n}\n\nexport const getMovieReview = async (movie_review_path: string): Promise<any> => {\n  try {\n    const {data: review} =  await HTTP.get(`${movie_review_path}`);\n    return review;\n  }catch (e) {\n    throw new Error(e);\n  }\n}\n","import {useEffect, useState} from 'react';\nimport {useResolvedPath} from 'react-router-dom';\n\nimport { getMovieReview } from '../../../api/movie-api';\n\nimport './style.scss';\n\nconst MovieReview = () => {\n  const { pathname } = useResolvedPath('');\n  const [reviews, setReviews] = useState<Array<any>>([]);\n\n  useEffect(() => {\n    const getReview = async () => {\n      const {results: reviews} = await getMovieReview(pathname);\n      setReviews(reviews);\n    }\n\n    getReview().finally();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div className=\"movie-review\">\n      {\n        reviews.length > 0 ? (\n          <ul className=\"reviews-list\">\n            {\n              reviews.map((item) => (\n                <li className=\"reviews-item item\" key={item.id}>\n                  <p className=\"item-title\">{item.author}</p>\n                  <span className=\"item-content\">{item.content}</span>\n                </li>\n              ))\n            }\n          </ul>\n        ) : (\n          <p>No reviews yet !</p>\n        )\n      }\n    </div>\n  )\n}\n\nexport default MovieReview;\n"],"names":["IMAGE_URL","HTTP","get","url","q","axios","method","getTrends","movies","data","Error","getMovie","movie_id","movie","searchMovies","query","results","getMovieCredits","movie_credit_path","credit","getMovieReview","movie_review_path","review","pathname","useResolvedPath","useState","reviews","setReviews","useEffect","getReview","finally","className","length","map","item","author","content","id"],"sourceRoot":""}